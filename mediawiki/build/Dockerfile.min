FROM ubuntu:22.04 AS base

LABEL maintainers="simon.stier@gmx.de"

ENV MW_VERSION=REL1_39 \
    MW_HOME=/var/www/html/w \
    MW_VOLUME=/mediawiki \
    WWW_USER=www-data \
    WWW_GROUP=www-data \
    APACHE_LOG_DIR=/var/log/apache2 \
    PHP_VERSION=8.1 \
    DEBIAN_FRONTEND=noninteractive \
    # allow plugins to run as root/super user
    COMPOSER_ALLOW_SUPERUSER=1 

# Install requered packages
RUN set -x; \
    apt-get update \
    && export LANG=C.UTF-8 \
    && apt-get install -y software-properties-common \
    && add-apt-repository -y ppa:ondrej/php \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        ca-certificates \
        apache2 \
        libapache2-mod-php$PHP_VERSION \
        php$PHP_VERSION \
        php$PHP_VERSION-mysql \
        php$PHP_VERSION-pgsql \
        php$PHP_VERSION-cli \
        php$PHP_VERSION-gd \
        php$PHP_VERSION-curl \
        php$PHP_VERSION-mbstring \
        php$PHP_VERSION-xml \
        php-xml \
        php$PHP_VERSION-apcu \
        php$PHP_VERSION-intl \
        php$PHP_VERSION-zip \
        php$PHP_VERSION-memcached \
        php-pear \
        imagemagick \
        netcat \
        git \
        #composer \
        unzip \
        mysql-client \
        wget \
        nano \
        curl \
        jq \
    && update-alternatives --set php /usr/bin/php$PHP_VERSION \
    && sed -i "$ s|\-n||g" /usr/bin/pecl \
    && pear install mail net_smtp \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt/archives/* \
    && a2enmod rewrite \
    && a2enmod remoteip \
    && rm /var/www/html/index.html \
    && rm -rf /etc/apache2/sites-enabled/* \
    && wget -qO composer-setup.php https://getcomposer.org/installer \
    && php composer-setup.php --install-dir=/usr/local/bin --filename=composer

# logs should go to stdout / stderr
RUN set -ex \
    && ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log" \
    && ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log" \
    && ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

##### MediaWiki Core setup
RUN set -x; \
    mkdir -p $MW_HOME \
    #&& git clone --depth 1 -b $MW_VERSION-dev https://github.com/OpenSemanticLab/mediawiki.git $MW_HOME \
    && git clone --depth 1 -b $MW_VERSION https://github.com/mediawiki/mediawiki.git $MW_HOME \
    && cd $MW_HOME \
    ## Bundled extensions
    && git submodule update --init --recursive \
    && composer install --no-dev \
    && chown -R $WWW_USER:$WWW_GROUP images \
    && chown -R $WWW_USER:$WWW_GROUP cache \
    ## for PdfHandler (bundled)
    && apt-get update && apt-get install -y --no-install-recommends poppler-utils ghostscript \
    ## for SyntaxHighlight (bundled), alternativ: apt-get install python-pygments & set $wgPygmentizePath = '/usr/bin/pygmentize';
    && chmod a+x  $MW_HOME/extensions/SyntaxHighlight_GeSHi/pygments/pygmentize \
    ## create empty config
    && touch composer.local.json && echo "{}" >> composer.local.json \
    ## allow plugin
    && COMPOSER=composer.local.json composer config --no-plugins allow-plugins.wikimedia/composer-merge-plugin true \
    ## alternative way to allow plugin
    #&& jq '.config."allow-plugins" += {"wikimedia/composer-merge-plugin": true}' < composer.local.json  > tmp.$$.json && mv tmp.$$.json composer.local.json \
    && cd ..

##### Skins ####
RUN set -x; \
    cd $MW_HOME/skins \
    && git clone --depth 1 -b osw https://github.com/OpenSemanticLab/mediawiki-skins-Citizen Citizen \
    && cd $MW_HOME \
    && COMPOSER=composer.local.json composer require --no-update mediawiki/bootstrap-components:~5.0 \
    && composer update  --no-dev --prefer-source

##### Non-bundled Core Extensions ####
RUN set -x; \
    cd $MW_HOME/extensions \
    && git clone --depth 1 -b $MW_VERSION https://github.com/wikimedia/mediawiki-extensions-MyVariables.git MyVariables \
    && cd $MW_HOME \
    && COMPOSER=composer.local.json composer config --no-plugins allow-plugins.composer/installers true \
    && composer update  --no-dev --prefer-source \
    && cd ..
    
##### ElasticSearch extensions
RUN set -x; \
    cd $MW_HOME/extensions \
    && git clone --depth 1 -b $MW_VERSION https://gerrit.wikimedia.org/r/p/mediawiki/extensions/CirrusSearch \
    && git clone --depth 1 -b $MW_VERSION https://gerrit.wikimedia.org/r/p/mediawiki/extensions/Elastica \
    && cd Elastica \
    && composer install --no-dev \
    && cd ..

##### Flow extension #####
RUN set -x; \
    cd $MW_HOME/extensions \
    && git clone --depth 1 -b $MW_VERSION https://github.com/wikimedia/mediawiki-extensions-CommentStreams extensions/CommentStreams

FROM base as extensions

#### Data ####
RUN set -x; \
    cd $MW_HOME \
    ## WSSlots
    && git clone --depth 1 https://github.com/OpenSemanticLab/WSSlots.git extensions/WSSlots \
    && jq '.extra."merge-plugin".include += ["extensions/WSSlots/composer.json"]' < composer.local.json  > tmp.$$.json && mv tmp.$$.json composer.local.json \
    ## PageExchange
    && git clone --depth 1 -b dev https://github.com/OpenSemanticLab/mediawiki-extensions-PageExchange extensions/PageExchange \
    ## Update composer
    && composer update  --no-dev --prefer-source \
    && cd ..

##### SEMANTIC MEDIAWIKI
# versions form https://github.com/CanastaWiki/Canasta/blob/master/_sources/configs/composer.canasta.json
RUN set -x; \
    cd $MW_HOME \
    && COMPOSER=composer.local.json composer require --no-update mediawiki/semantic-media-wiki:^4.2.0 \
    && COMPOSER=composer.local.json composer require --no-update mediawiki/semantic-result-formats:^4.2.0 \
    && COMPOSER=composer.local.json composer require --no-update mediawiki/semantic-compound-queries:~2.2 \
    && COMPOSER=composer.local.json composer require --no-update mediawiki/semantic-scribunto:~2.2 \
    ## SRF
    && cd $MW_HOME/extensions \
    && git clone --depth 1 -b dev https://github.com/OpenSemanticLab/SemanticResultFormats.git SemanticResultFormats \
    && git clone --depth 1 -b $MW_VERSION https://github.com/wikimedia/mediawiki-extensions-PageForms.git PageForms \
    && cd $MW_HOME \
    && composer update  --no-dev --prefer-source --optimize-autoloader \
    # fix: videos in gallery format not shown
    && sed -i -e "s/find( 'a.image' )/find( 'a.image' ).add( 'video>a' )/g" $MW_HOME/extensions/SemanticResultFormats/formats/gallery/resources/ext.srf.gallery.redirect.js \
    # fix: create temp table only of not existing yet, see https://github.com/SemanticMediaWiki/SemanticMediaWiki/issues/5714
    && sed -i -e 's/"CREATE TEMPORARY TABLE "/"CREATE TEMPORARY TABLE IF NOT EXISTS "/g' $MW_HOME/extensions/SemanticMediaWiki/src/SQLStore/TableBuilder/TemporaryTableBuilder.php

#### Scribunto / Lua ####
RUN set -x; \
    cd $MW_HOME/extensions \
    && git clone --depth 1 https://github.com/Liquipedia/VariablesLua.git 

##### Multimedia and Editor extension
RUN set -x; \
    cd $MW_HOME/extensions \
    && git clone --depth 1 -b $MW_VERSION https://github.com/wikimedia/mediawiki-extensions-VEForAll.git VEForAll \
    && git clone --depth 1 -b $MW_VERSION https://github.com/wikimedia/mediawiki-extensions-CodeMirror.git CodeMirror \
    #&& git clone --depth 1 -b $MW_VERSION https://github.com/wikimedia/mediawiki-extensions-DrawioEditor.git DrawioEditor \
    && git clone --depth 1 -b dev https://github.com/OpenSemanticLab/mediawiki-extensions-DrawioEditor DrawioEditor \
    #  apply patch for private wikis, see: https://phabricator.wikimedia.org/T271347
    && sed -i -e "s/static \$validNamespaces = \[/static \$validNamespaces = \['http:\/\/www.w3.org\/1999\/xhtml',/g" $MW_HOME/includes/upload/UploadBase.php \
    && sed -i -e "s/datastr = datastr.replace( expr, '\"http:\/\/www.w3.org\/2000\/svg\"' );/\/\/datastr = datastr.replace( expr, '\"http:\/\/www.w3.org\/2000\/svg\"' ); /g" $MW_HOME/extensions/DrawioEditor/resources/ext.drawioeditor.js \
    && cd $MW_HOME


##### UI extensions
RUN set -x; \
    cd $MW_HOME \
    #&& COMPOSER=composer.local.json composer require --no-update "mediawiki/simple-batch-upload:1.8.2" \
    && git clone -b mobile-camera-upload https://github.com/OpenSemanticLab/mediawiki-extensions-SimpleBatchUpload.git extensions/SimpleBatchUpload \
    && jq '.extra."merge-plugin".include += ["extensions/SimpleBatchUpload/composer.json"]' < composer.local.json  > tmp.$$.json && mv tmp.$$.json composer.local.json \
    && composer update  --no-dev --prefer-source \
    && cd $MW_HOME/extensions \
    && git clone --depth 1 -b REL1_35-dev https://github.com/OpenSemanticLab/mediawiki-extensions-DisplayTitle.git DisplayTitle \  
    && cd ..

FROM extensions as custom

#### TEMP ####
RUN set -x; \
    cd $MW_HOME/extensions \
    && git clone https://github.com/simontaurus/WellplateEditor.git \
    && git clone -b no-storage-prompt https://github.com/OpenSemanticLab/mediawiki-extensions-SvgEditor.git SvgEditor \
    && git clone https://github.com/OpenSemanticLab/mediawiki-extensions-MwJson.git MwJson \
    && git clone https://github.com/OpenSemanticLab/mediawiki-extensions-SpreadsheetEditor.git SpreadsheetEditor \
    && git clone https://github.com/OpenSemanticLab/mediawiki-extensions-ChemEditor.git ChemEditor \
    && git clone -b refactoring https://github.com/OpenSemanticLab/mediawiki-extensions-InteractiveSemanticGraph InteractiveSemanticGraph \
    && git clone https://github.com/OpenSemanticLab/mediawiki-extensions-InteractiveSemanticGraph2 InteractiveSemanticGraph2 \
    && git clone https://github.com/OpenSemanticLab/mediawiki-extensions-SciFileHandler SciFileHandler \    
    && git clone https://github.com/OpenSemanticLab/mediawiki-extensions-OpenSemanticLab.git OpenSemanticLab \
    && git clone --depth 1 https://github.com/OpenSemanticLab/mediawiki-extensions-SemanticProperties.git SemanticProperties \
    && git clone --depth 1 https://github.com/OpenSemanticWorld/mediawiki-extensions-Chatbot.git Chatbot \
    && git clone --depth 1 https://github.com/OpenSemanticLab/mediawiki-extensions-FileApi.git FileApi \
    && cd ..

#### Run maintenance sripts
# Increase value for run maintenance script before web service started
ENV MW_AUTOUPDATE=true \
    MW_MAINTENANCE_UPDATE=8 \
    MW_MAINTENANCE_CIRRUSSEARCH_UPDATECONFIG=1 \
    MW_MAINTENANCE_CIRRUSSEARCH_FORCEINDEX=1 \
    MW_MAINTENANCE_ULS_INDEXER=1 \
    #MW_SCRIPT_CLDR_REBUILD=1 \
    MW_SITE_NAME=My\ MediaWiki\ Site \
    MW_SITE_LANG=en \
    MW_DEFAULT_SKIN=vector \
    MW_MAIN_CACHE_TYPE=CACHE_ACCEL \
    MW_REST_DOMAIN=localhost \
    MW_REST_RESTBASE_PROXY_PATH=/api/rest_ \
    MW_REST_RESTBASE_PORT=7231 \
    MW_SHOW_EXCEPTION_DETAILS=true \
    PHP_LOG_ERRORS=On \
    PHP_ERROR_REPORTING=E_ALL
    
EXPOSE 80

COPY php.ini /etc/php/$PHP_VERSION/apache2/conf.d/mediawiki.ini

COPY mediawiki.conf /etc/apache2/sites-available/mediawiki.conf
RUN set -x; ln -s /etc/apache2/sites-available/mediawiki.conf /etc/apache2/sites-enabled/mediawiki.conf

COPY run.sh /run.sh
RUN chmod -v +x /run.sh

COPY mwjobrunner.sh /mwjobrunner.sh
RUN chmod -v +x /mwjobrunner.sh
COPY mwmaintenance.sh /mwmaintenance.sh
RUN chmod -v +x /mwmaintenance.sh
COPY mwsitemapbuilder.sh /mwsitemapbuilder.sh
RUN chmod -v +x /mwsitemapbuilder.sh

COPY DockerSettings.php $MW_HOME/DockerSettings.min.php

COPY favicon.ico $MW_HOME/favicon.ico
COPY logo.* $MW_HOME/

#dir for public files, e. g. main page images
COPY pub $MW_HOME/pub

#dir for certs
COPY ca-certificates /usr/local/share/ca-certificates
RUN update-ca-certificates

ENV MW_HOME=/var/www/html/w \
    MW_VOLUME=/mediawiki

CMD ["/run.sh"]

VOLUME ["$MW_HOME/images", "$MW_VOLUME"]